import type { Metadata } from "next";
import { redirect } from "next/navigation";

import { currentUser } from "@clerk/nextjs";
import { Box, Container } from "@mantine/core";

import { getAllPosts, getUserLatestPosts } from "@/lib/db/post";
import { getProjectTitles } from "@/lib/db/project";

import CraeteButton from "./_components/create-button";
import FixedButton from "./_components/fixed-button";
import Header from "./_components/header";

export const metadata: Metadata = {
  title: "Timeline | All",
  description: "Generated by create next app",
};

export default async function TimelineLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const user = await currentUser();

  if (!user) {
    redirect("/sign-in");
  }

  const [projectTitles, latestPost, allPosts] = await Promise.all([
    getProjectTitles(user.id),
    getUserLatestPosts(user.id),
    getAllPosts(),
  ]);

  const projectTitleArr = projectTitles.map((project) => project.title);

  const isPostedToday =
    latestPost?.created_at.getDate() !== new Date().getDate();
  return (
    <Container size={"md"} mih={"100dvh"} pos={"relative"}>
      <Header>
        {isPostedToday ? (
          <CraeteButton
            projects={projectTitleArr}
            type={"button"}
            username={user.firstName}
            avatar={user.imageUrl}
          />
        ) : (
          <CraeteButton
            projects={projectTitleArr}
            isDone
            type={"button"}
            username={user.firstName}
            avatar={user.imageUrl}
          />
        )}
      </Header>

      <Box w={{ base: "100%", xs: 576 }} mx={"auto"} component={"main"}>
        {children}
      </Box>

      {/* Fix props and isPostedToday branch */}
      <FixedButton>
        {isPostedToday ? (
          <CraeteButton
            projects={projectTitleArr}
            type={"button"}
            username={user.firstName}
            avatar={user.imageUrl}
          />
        ) : (
          <CraeteButton
            projects={projectTitleArr}
            isDone
            type={"button"}
            username={user.firstName}
            avatar={user.imageUrl}
          />
        )}
      </FixedButton>
    </Container>
  );
}
