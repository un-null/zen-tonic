import type { Metadata } from "next";
import { redirect } from "next/navigation";

import { currentUser } from "@clerk/nextjs";
import { Avatar, Box, Container, Flex } from "@mantine/core";

import { getUserLatestPosts } from "@/lib/db/post";
import { getProjectTitles } from "@/lib/db/project";

import CraeteButton from "./_components/create-button";
import LinkButton from "./_components/link-button";

export const metadata: Metadata = {
  title: "Timeline | All",
  description: "Generated by create next app",
};

export default async function TimelineLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const user = await currentUser();

  if (!user) {
    redirect("/sign-in");
  }

  const [projectTitles, latestPost] = await Promise.all([
    getProjectTitles(user.id),
    getUserLatestPosts(user.id),
  ]);

  const isProjectTitles = projectTitles.length !== 0;
  const isLatestPost =
    latestPost !== null && Object.keys(latestPost).length !== 0;

  if (!isProjectTitles || !isLatestPost) {
    throw Error("データの取得に失敗しました");
  }

  const isPostedToday =
    latestPost.created_at.getDate() !== new Date().getDate();

  const projectTitleArr = projectTitles.map((data) => data.title);

  return (
    <Container
      display={"grid"}
      size={"md"}
      mih={"100dvh"}
      style={{
        gridTemplateRows: "1fr auto",
      }}
    >
      <div
        style={{
          display: "grid",
          gridTemplateColumns: "auto 1fr auto",
          minHeight: "full",
        }}
      >
        <Flex
          component="aside"
          pt={12}
          pb={32}
          align={"center"}
          direction={"column"}
        >
          <Box flex={1}>
            <Avatar size={"lg"} radius={"sm"} />
          </Box>
          <LinkButton />
        </Flex>
        <Box component="main" w={"36em"} mx={"auto"}>
          {children}
        </Box>

        {/* fix props drilling */}
        <Box component="aside" pt={16}>
          {isPostedToday ? (
            <CraeteButton
              projects={projectTitleArr}
              username={user.firstName}
              avatar={user.imageUrl}
              type={"button"}
            />
          ) : (
            <CraeteButton
              projects={projectTitleArr}
              isDone
              type={"button"}
              username={user.firstName}
              avatar={user.imageUrl}
            />
          )}
        </Box>
      </div>
    </Container>
  );
}
